{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"alphavantage-java","text":"<p>This library was created to provide a fluent interface for accessing the AlphaVantage API with Java.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>To get started using this library, make sure to get an API Key from Alphavantage's website. Add the library as a dependency to your java/android project</p>"},{"location":"#gradle-installation","title":"Gradle Installation","text":"<pre><code>allprojects {\n    repositories {\n        ...\n        maven { url 'https://jitpack.io' }\n    }\n}\ndependencies {\n    ...\n    implementation 'com.github.crazzyghost:alphavantage-java:x.y.z'\n}\n</code></pre>"},{"location":"#maven-installation","title":"Maven Installation","text":"<pre><code>&lt;repositories&gt;\n    ...\n    &lt;repository&gt;\n        &lt;id&gt;jitpack.io&lt;/id&gt;\n        &lt;url&gt;https://jitpack.io&lt;/url&gt;\n    &lt;/repository&gt;\n    ...\n&lt;/repositories&gt;\n&lt;dependencies&gt;\n    ...\n    &lt;dependency&gt;\n        &lt;groupId&gt;com.github.crazzyghost&lt;/groupId&gt;\n        &lt;artifactId&gt;alphavantage-java&lt;/artifactId&gt;\n        &lt;version&gt;x.y.z&lt;/version&gt;\n    &lt;/dependency&gt;\n    ...\n&lt;/dependencies&gt;\n</code></pre>"},{"location":"#quick-usage-guide","title":"Quick Usage Guide","text":"<p>These five steps summarize how to access data using this library</p> <p>Step 1. <code>config</code>ure the wrapper</p> <p>Step 2. Select a <code>category</code></p> <p>Step 3. Set the <code>parameters</code> for the selected category</p> <p>Step 4. (Optional) Add <code>response callbacks</code></p> <p>Step 5. <code>fetch</code> results</p>"},{"location":"#1-configuring-the-wrapper","title":"1. <code>Config</code>uring the wrapper","text":"<p>Access to the API is through the AlphaVantage Singleton which is accessed using the <code>static</code> <code>api()</code> method of the class.</p> <p>Tip</p> <p>Initialize the singleton with a <code>Config</code> instance once through out your apps lifetime.</p> Java <pre><code>Config cfg = Config.builder()\n    .key(\"#&amp;ALPHA10100DEMOKEY\")\n    .timeOut(10)\n    .build();\n</code></pre> Kotlin <pre><code>var cfg = Config.builder()\n    .key(\"#&amp;ALPHA10100DEMOKEY\")\n    .timeOut(10)\n    .build()\n</code></pre> <p>Use the config object to initialize the api instance. You will use this object to set your api key and configure the http client.</p> <p>Warning</p> <p>Using the wrapper without setting a config or a config key will throw an exception.</p> Java <pre><code>AlphaVantage.api().init(cfg);\n</code></pre> Kotlin <pre><code>AlphaVantage.api().init(cfg)\n</code></pre> <p>That's it! We're good to go.</p>"},{"location":"#2-selecting-a-category","title":"2. Selecting a <code>category</code>","text":"<p>Here, we choose which data category/endpoint we want to access</p> <p>Info</p> <p>Each of category is exposed through a method call in the instantiated wrapper.</p> Category Method Stock Time Series Data <code>.timeSeries()</code> Forex Rate Data <code>.forex()</code> Exchange Rate Data <code>.exchangeRate()</code> Digital Currency Data <code>.crypto()</code> Technical Indicator Data <code>.indicator()</code> Sector Performance Data <code>.sector()</code> Fundamental Data <code>.fundamentalData()</code> <p>For example, to select the Stock Time Series:</p> Java <pre><code>AlphaVantage.api()\n    .timeSeries()\n</code></pre> Kotlin <pre><code>AlphaVantage.api()\n    .timeSeries()\n</code></pre>"},{"location":"#3-setting-the-parameters-for-the-selected-category","title":"3. Setting the <code>parameters</code> for the selected category","text":"<p>To set the api request parameters, call the appopriate parameter methods. For instance for the <code>function</code> parameter function you call <code>daily()</code> for the <code>TIME_SERIES_DAILY</code> function, <code>intraday()</code> for the <code>TIME_SERIES_INTRADAY</code>,  and so on.</p> <p>Let's select the <code>TIME_SERIES_INTRADAY</code> function</p> Java <pre><code>AlphaVantage.api()\n    .timeSeries()\n    .intraday()\n...\n</code></pre> Kotlin <pre><code>AlphaVantage.api()\n    .timeSeries()\n    .intraday()\n...\n</code></pre> <p>Tip</p> <p>Start setting parameters by calling an appropriate function method in the selected category</p>"},{"location":"#4-adding-response-callbacks","title":"4. Adding <code>response callbacks</code>","text":"<p>To handle responses add the <code>onSuccess()</code> or <code>onFailure()</code> async callbacks. Starting from version 1.5.0, this is an optional step.</p> Java <pre><code>public void handleSuccess(TimeSeriesResponse response) {\n    plotGraph(reponse.getStockUnits());\n}\npublic void handleFailure(AlphaVantageException error) {\n    /* uh-oh! */\n}\n\nAlphaVantage.api()\n    .timeSeries()\n    .intraday()\n    .forSymbol(\"IBM\")\n    .interval(Interval.FIVE_MIN)\n    .outputSize(OutputSize.FULL)\n    .onSuccess(e-&gt;handleSuccess(e))\n    .onFailure(e-&gt;hanldeFailure(e))\n    ...\n</code></pre> Kotlin <pre><code>fun handleSuccess(response:TimeSeriesResponse) {\n    plotGraph(reponse.getStockUnits())\n}\nfun handleFailure(error:AlphaVantageException) {\n    /* uh-oh! */\n}\n\nAlphaVantage.api()\n    .timeSeries()\n    .intraday()\n    .forSymbol(\"IBM\")\n    .interval(Interval.FIVE_MIN)\n    .outputSize(OutputSize.FULL)\n    .onSuccess({ e-&gt; handleSuccess(e) })\n    .onFailure({ e-&gt; hanldeFailure(e) })            \n...\n</code></pre> <p>Info</p> <p>Callbacks are optional, you can choose to handle either or both</p>"},{"location":"#5-fetch-results","title":"5.  <code>fetch</code> results","text":"<p>When you are okay with setting the parameters call the <code>fetch()</code> method. Simple!</p> Java <pre><code>AlphaVantage.api()\n    .timeSeries()\n    .intraday()\n    .forSymbol(\"IBM\")\n    .interval(Interval.FIVE_MIN)\n    .outputSize(OutputSize.FULL)\n    .onSuccess(e-&gt;handleSuccess(e))\n    .onFailure(e-&gt;hanldeFailure(e))\n    .fetch();\n</code></pre> Kotlin <pre><code>AlphaVantage.api()\n    .timeSeries()\n    .intraday()\n    .forSymbol(\"IBM\")\n    .interval(Interval.FIVE_MIN)\n    .outputSize(OutputSize.FULL)\n    .onSuccess({ e-&gt; handleSuccess(e) })\n    .onFailure({ e-&gt; hanldeFailure(e) })\n    .fetch()\n</code></pre> <p>From v1.5.0 up, you can also use the synchronous fetch method by calling the <code>fetchSync()</code> method without callback handlers.</p> Java <pre><code>TimeSeriesResponse response = AlphaVantage.api()\n    .timeSeries()\n    .intraday()\n    .forSymbol(\"IBM\")\n    .interval(Interval.FIVE_MIN)\n    .outputSize(OutputSize.FULL)\n    .fetchSync();\n</code></pre> Kotlin <pre><code>TimeSeriesResponse response = AlphaVantage.api()\n    .timeSeries()\n    .intraday()\n    .forSymbol(\"IBM\")\n    .interval(Interval.FIVE_MIN)\n    .outputSize(OutputSize.FULL)\n    .fetchSync()\n</code></pre>"},{"location":"#releases","title":"Releases","text":"<p>Release history can be found in the change log.</p>"},{"location":"#license","title":"License","text":"<pre><code>MIT License\n\nCopyright (c) 2020 Sylvester Sefa-Yeboah\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#v170-23-01-2024","title":"v1.7.0 - 23-01-2024","text":"<ul> <li>New: Support for economic indicators </li> <li>New: Modularise library </li> <li>Deprecated: <code>indicator</code> interface in favour of <code>technicalIndicator</code> for access to Technical Indicator data</li> </ul>"},{"location":"changelog/#v162-29-01-2022","title":"v1.6.2 - 29-01-2022","text":"<ul> <li>Fix: Number parsing bug </li> </ul>"},{"location":"changelog/#v161-15-11-2021","title":"v1.6.1 - 15-11-2021","text":"<ul> <li>Fix: JitPack build failure</li> <li>Fix: BalanceSheet field types</li> </ul>"},{"location":"changelog/#v160-14-11-2021","title":"v1.6.0 - 14-11-2021","text":"<ul> <li>New: Support for fundamental data</li> </ul>"},{"location":"changelog/#v150-11-01-2021","title":"v1.5.0 - 11-01-2021","text":"<ul> <li>New: Support for synchronous requests</li> </ul>"},{"location":"changelog/#v142-20-10-2020","title":"v1.4.2 - 20-10-2020","text":"<ul> <li>Missing crypto unit date </li> </ul>"},{"location":"changelog/#v141-25-07-2020","title":"v1.4.1 - 25-07-2020","text":"<ul> <li>Fix: Array index out of bounds exception caused by empty API response</li> </ul>"},{"location":"changelog/#v140-13-06-2020","title":"v1.4.0 - 13-06-2020","text":"<ul> <li>New: Support for Sector Performances</li> </ul>"},{"location":"changelog/#v132-21-05-2020","title":"v1.3.2 - 21-05-2020","text":"<ul> <li>Fix: Maven build issue</li> </ul>"},{"location":"changelog/#v131-21-05-2020","title":"v1.3.1 - 21-05-2020","text":"<ul> <li>Fix: Multiple async requests for enpoint bug</li> </ul>"},{"location":"changelog/#v130-09-05-2020","title":"v1.3.0 - 09-05-2020","text":"<ul> <li>New: Support for Quote Endpoint</li> <li>Changed: RequestHelper to RequestProxy for TimeSeries</li> <li>Fix: Time Series IntradayRequest interval bug</li> </ul>"},{"location":"changelog/#v121-07-05-2020","title":"v1.2.1 - 07-05-2020","text":"<ul> <li>Fix: Forex IntradayRequest interval bug</li> </ul>"},{"location":"changelog/#v120-05-05-2020","title":"v1.2.0 - 05-05-2020","text":"<ul> <li>New: Support for crypto currency Health Index</li> </ul>"},{"location":"changelog/#v111-04-05-2020","title":"v1.1.1 - 04-05-2020","text":"<ul> <li>New: Bid Rates and Ask Rates for Exchange Rates</li> <li>Fix: Exchange Rates response data access</li> </ul>"},{"location":"changelog/#v110-04-05-2020","title":"v1.1.0 - 04-05-2020","text":"<ul> <li>New: Support for Technical Indicators</li> </ul>"},{"location":"changelog/#v102-24-04-2020","title":"v1.0.2 - 24-04-2020","text":"<ul> <li>Fix: API url parameter bug</li> </ul>"},{"location":"changelog/#v101-17-04-2020","title":"v1.0.1 - 17-04-2020","text":"<ul> <li>Fix: Incorrect mapping of time series data</li> <li>Fix: Getters for Crypto and Forex Units</li> <li>Change: Rename crypto subpackages</li> </ul>"},{"location":"changelog/#v100-23-10-2019","title":"v1.0.0 - 23-10-2019","text":"<ul> <li>New: Support for Time Series Data</li> <li>New:Support for Forex Data</li> <li>New:Support for Crypto Currencies</li> <li>New:Support for Exchange Rates</li> <li>New:Tests for Time Series</li> </ul>"},{"location":"crypto/","title":"CryptoCurrencies","text":""},{"location":"crypto/#digital-currencies","title":"Digital Currencies","text":""},{"location":"crypto/#defaults","title":"Defaults","text":"<pre><code>dataType: DataType.JSON\n</code></pre>"},{"location":"crypto/#daily","title":"Daily","text":"Java <pre><code>Alphavantage.api()\n    .crypto()\n    .daily()\n    .forSymbol(\"BTC\")\n    .market(\"CNY\")\n    .onSuccess(e-&gt;onData(e.getCryptoUnits()))\n    .fetch();\n</code></pre>"},{"location":"crypto/#weekly","title":"Weekly","text":"Java <pre><code>Alphavantage.api()\n    .crypto()\n    .weekly()\n    .forSymbol(\"BTC\")\n    .market(\"USD\")\n    .onSuccess(e-&gt;onData(e.getCryptoUnits()))\n    .fetch();\n</code></pre>"},{"location":"crypto/#monthly","title":"Monthly","text":"Java <pre><code>Alphavantage.api()\n    .crypto()\n    .monthly()\n    .forSymbol(\"BTC\")\n    .market(\"USD\")\n    .onSuccess(e-&gt;onData(e.getCryptoUnits()))\n    .fetch();\n</code></pre> <p>Response Type: <code>CryptoResponse</code></p>"},{"location":"crypto/#response","title":"Response","text":"Java <pre><code>public void onData(List&lt;CryptoUnit&gt; cryptoUnits){\n    cryptoUnits.stream().forEach(u -&gt; {\n        System.out.println(u.getHigh());\n        System.out.println(u.getLow());\n        System.out.println(u.getOpen());\n        System.out.println(u.getClose());\n        System.out.println(u.getHighUSD());\n        System.out.println(u.getLowUSD());\n        System.out.println(u.getOpenUSD());\n        System.out.println(u.getCloseUSD());\n        System.out.println(u.getVolume());\n        System.out.println(u.getMarketCap());\n        System.out.println(u.getDate());\n    })\n}\n</code></pre>"},{"location":"crypto/#health-index","title":"Health Index","text":"Java <pre><code>Alphavantage.api()\n    .crypto()\n    .rating()\n    .forSymbol(\"BTC\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>RatingResponse</code></p>"},{"location":"crypto/#response_1","title":"Response","text":"Java <pre><code>public void onData(RatingResponse response){\n    System.out.println(response.getSymbol());\n    System.out.println(response.getName());\n    System.out.println(response.getFcasRating());\n    System.out.println(response.getFcasScore());\n    System.out.println(response.getDeveloperScore());\n    System.out.println(response.getMarketMaturityScore());\n    System.out.println(response.getUtilityScore());\n    System.out.println(response.getLastRefreshed());\n    System.out.println(response.getTimeZone());\n}\n</code></pre>"},{"location":"economicindicator/","title":"Economic Indicators","text":""},{"location":"economicindicator/#economic-indicator-data","title":"Economic Indicator Data","text":""},{"location":"economicindicator/#real-gdp","title":"Real GDP","text":"Java <pre><code>EconomicIndicatorResponse response =  AlphaVantage\n    .api()\n    .economicIndicator()\n    .realGdp()\n    .interval(Interval.ANNUAL)\n    .fetchSync();\n</code></pre> <p>Response Type: <code>EconomicIndicatorResponse</code></p>"},{"location":"economicindicator/#real-gdp-per-capita","title":"Real GDP Per Capita","text":"Java <pre><code>EconomicIndicatorResponse response =  AlphaVantage\n    .api()\n    .economicIndicator()\n    .realGdpPerCapita()\n    .fetchSync();\n</code></pre> <p>Response Type: <code>EconomicIndicatorResponse</code></p>"},{"location":"economicindicator/#treasury-yield","title":"Treasury Yield","text":"Java <pre><code>EconomicIndicatorResponse response =  AlphaVantage\n    .api()\n    .economicIndicator()\n    .treasuryYield()\n    .interval(Interval.MONTHLY)\n    .maturity(Maturity.SEVEN_YEAR)\n    .fetchSync();\n</code></pre> <p>Response Type: <code>EconomicIndicatorResponse</code></p>"},{"location":"economicindicator/#federal-funds-rate","title":"Federal Funds Rate","text":"Java <pre><code>EconomicIndicatorResponse response =  AlphaVantage\n    .api()\n    .economicIndicator()\n    .federalFundsRate()\n    .interval(Interval.MONTHLY)\n    .fetchSync();\n</code></pre> <p>Response Type: <code>EconomicIndicatorResponse</code></p>"},{"location":"economicindicator/#cpi","title":"CPI","text":"Java <pre><code>EconomicIndicatorResponse response =  AlphaVantage\n    .api()\n    .economicIndicator()\n    .cpi()\n    .interval(Interval.MONTHLY)\n    .fetchSync();\n</code></pre> <p>Response Type: <code>EconomicIndicatorResponse</code></p>"},{"location":"economicindicator/#inflation","title":"Inflation","text":"Java <pre><code>EconomicIndicatorResponse response =  AlphaVantage\n    .api()\n    .economicIndicator()\n    .inflation()\n    .fetchSync();\n</code></pre> <p>Response Type: <code>EconomicIndicatorResponse</code></p>"},{"location":"economicindicator/#inflation-expectation","title":"Inflation Expectation","text":"Java <pre><code>EconomicIndicatorResponse response =  AlphaVantage\n    .api()\n    .economicIndicator()\n    .inflationExpectation()\n    .fetchSync();\n</code></pre> <p>Response Type: <code>EconomicIndicatorResponse</code></p>"},{"location":"economicindicator/#consumer-sentiment","title":"Consumer Sentiment","text":"Java <pre><code>EconomicIndicatorResponse response =  AlphaVantage\n    .api()\n    .economicIndicator()\n    .consumerSentiment()\n    .fetchSync();\n</code></pre> <p>Response Type: <code>EconomicIndicatorResponse</code></p>"},{"location":"economicindicator/#retail-sales","title":"Retail Sales","text":"Java <pre><code>EconomicIndicatorResponse response =  AlphaVantage\n    .api()\n    .economicIndicator()\n    .retailSales()\n    .fetchSync();\n</code></pre> <p>Response Type: <code>EconomicIndicatorResponse</code></p>"},{"location":"economicindicator/#durable-goods-orders","title":"Durable Goods Orders","text":"Java <pre><code>EconomicIndicatorResponse response =  AlphaVantage\n    .api()\n    .economicIndicator()\n    .durables()\n    .fetchSync();\n</code></pre> <p>Response Type: <code>EconomicIndicatorResponse</code></p>"},{"location":"economicindicator/#unemployment-rate","title":"Unemployment Rate","text":"Java <pre><code>EconomicIndicatorResponse response =  AlphaVantage\n    .api()\n    .economicIndicator()\n    .unemployment()\n    .fetchSync();\n</code></pre> <p>Response Type: <code>EconomicIndicatorResponse</code></p>"},{"location":"economicindicator/#non-farm-payroll","title":"Non farm Payroll","text":"Java <pre><code>EconomicIndicatorResponse response =  AlphaVantage\n    .api()\n    .economicIndicator()\n    .nonFarmPayroll()\n    .fetchSync();\n</code></pre> <p>Response Type: <code>EconomicIndicatorResponse</code></p>"},{"location":"exchangerate/","title":"Exchange Rates","text":""},{"location":"exchangerate/#request","title":"Request","text":"Java <pre><code>AlphaVantage.api()\n    .exchangeRate()\n    .fromCurrency(\"USD\")\n    .toCurrency(\"GHS\")\n    .onSuccess((e) -&gt; onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>ExchangeRateResponse</code></p>"},{"location":"exchangerate/#response","title":"Response","text":"Java <pre><code>public void onData(ExchangeRateResponse response){\n    System.out.println(response.getExchangeRate());\n    System.out.println(response.getBidPrice());\n    System.out.println(response.getAskPrice());\n    System.out.println(response.getFromCurrencyCode());\n    System.out.println(response.getFromCurrencyName());\n    System.out.println(response.getToCurrencyCode());\n    System.out.println(response.getToCurrencyName());\n    System.out.println(response.getLastRefreshed());\n    System.out.println(response.getTimeZone());\n}\n</code></pre>"},{"location":"forex/","title":"Forex (FX)","text":""},{"location":"forex/#defaults","title":"Defaults","text":"<pre><code>interval: Interval.ONE_MIN\nouputSize: OutputSize.COMPACT\ndataType: DataType.JSON\n</code></pre>"},{"location":"forex/#intraday","title":"Intraday","text":"Java <pre><code>Alphavantage.api()\n    .forex()\n    .intraday()\n    .forSymbol(\"AAPL\")\n    .interval(Interval.THIRTY_MIN)\n    .outputSize(OutputSize.FULL)\n    .dataType(DataType.JSON)\n    .onSuccess(e-&gt;onData(e.getForexUnits()))\n    .fetch();\n</code></pre>"},{"location":"forex/#daily","title":"Daily","text":"Java <pre><code>Alphavantage.api()\n    .forex()\n    .daily()\n    .forSymbol(\"AAPL\")\n    .outputSize(OutputSize.FULL)\n    .dataType(DataType.JSON)\n    .onSuccess(e-&gt;onData(e.getForexUnits()))\n    .fetch();\n</code></pre>"},{"location":"forex/#weekly","title":"Weekly","text":"Java <pre><code>Alphavantage.api()\n    .forex()\n    .weekly()\n    .forSymbol(\"AAPL\")\n    .outputSize(OutputSize.FULL)\n    .dataType(DataType.JSON)\n    .onSuccess(e-&gt;onData(e.getForexUnits()))\n    .fetch();\n</code></pre>"},{"location":"forex/#monthly","title":"Monthly","text":"Java <pre><code>Alphavantage.api()\n    .forex()\n    .monthly()\n    .forSymbol(\"AAPL\")\n    .outputSize(OutputSize.FULL)\n    .dataType(DataType.JSON)\n    .onSuccess(e-&gt;onData(e.getForexUnits()))\n    .fetch();\n</code></pre> <p>Response Type: <code>ForexResponse</code></p>"},{"location":"forex/#response","title":"Response","text":"Java <pre><code>public void onData(List&lt;ForexUnit&gt; forexUnits){\n    stockUnits.stream().forEach(u -&gt; {\n        System.out.println(u.getHigh());\n        System.out.println(u.getLow());\n        System.out.println(u.getOpen());\n        System.out.println(u.getClose());\n        System.out.println(u.getDate());\n   })\n}\n</code></pre>"},{"location":"fundamentaldata/","title":"Fundamental Data","text":""},{"location":"fundamentaldata/#fundamental-data","title":"Fundamental Data","text":""},{"location":"fundamentaldata/#cash-flow","title":"Cash Flow","text":"Java <pre><code>AlphaVantage\n    .api()\n    .fundamentalData()\n    .cashFlow()\n    .forSymbol(\"IBM\")\n    .onSuccess((CashFlowResponse e) -&gt; process(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>CashFlowResponse</code></p>"},{"location":"fundamentaldata/#income-statement","title":"Income Statement","text":"Java <pre><code>AlphaVantage\n    .api()\n    .fundamentalData()\n    .incomeStatement()\n    .forSymbol(\"IBM\")\n    .onSuccess((IncomeStatementResponse e) -&gt; process(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>IncomeStatementResponse</code></p>"},{"location":"fundamentaldata/#balance-sheet","title":"Balance Sheet","text":"Java <pre><code>AlphaVantage\n    .api()\n    .fundamentalData()\n    .balanceSheet()\n    .forSymbol(\"IBM\")\n    .onSuccess((BalanceSheetResponse e) -&gt; process(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>BalanceSheetResponse</code></p>"},{"location":"fundamentaldata/#earnings","title":"Earnings","text":"Java <pre><code>AlphaVantage\n    .api()\n    .fundamentalData()\n    .earnings()\n    .forSymbol(\"IBM\")\n    .onSuccess((EarningsResponse e) -&gt; process(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>EarningsResponse</code></p>"},{"location":"fundamentaldata/#company-overview","title":"Company Overview","text":"Java <pre><code>AlphaVantage\n    .api()\n    .fundamentalData()\n    .companyOverview()\n    .forSymbol(\"IBM\")\n    .onSuccess((CompanyOverviewResponse e) -&gt; process(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>CompanyOverviewResponse</code></p>"},{"location":"indicators/","title":"Technical Indicators","text":"<p>Note</p> <p>All Indicator Response provide a <code>getIndicatorUnits()</code> method to acess technical indicator data and <code>getMetaData()</code> to access metadata information</p>"},{"location":"indicators/#sma","title":"SMA","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .sma()\n    .forSymbol(\"AAPL\")\n    .interval(Interval.WEEKLY)\n    .seriesType(SeriesType.OPEN)\n    .timePeriod(60)\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicSeriesResponse</code></p>"},{"location":"indicators/#ema","title":"EMA","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .ema()\n    .forSymbol(\"AAPL\")\n    .interval(Interval.WEEKLY)\n    .seriesType(SeriesType.OPEN)\n    .timePeriod(60)\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicSeriesResponse</code></p>"},{"location":"indicators/#wma","title":"WMA","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .wma()\n    .forSymbol(\"AAPL\")\n    .interval(Interval.WEEKLY)\n    .seriesType(SeriesType.OPEN)\n    .timePeriod(60)\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicSeriesResponse</code></p>"},{"location":"indicators/#dema","title":"DEMA","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .dema()\n    .forSymbol(\"AAPL\")\n    .interval(Interval.WEEKLY)\n    .seriesType(SeriesType.OPEN)\n    .timePeriod(60)\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicSeriesResponse</code></p>"},{"location":"indicators/#tema","title":"TEMA","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .tema()\n    .interval(Interval.WEEKLY)\n    .seriesType(SeriesType.OPEN)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicSeriesResponse</code></p>"},{"location":"indicators/#trima","title":"TRIMA","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .trima()\n    .interval(Interval.WEEKLY)\n    .seriesType(SeriesType.OPEN)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicSeriesResponse</code></p>"},{"location":"indicators/#kama","title":"KAMA","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .kama()\n    .interval(Interval.WEEKLY)\n    .seriesType(SeriesType.OPEN)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicSeriesResponse</code></p>"},{"location":"indicators/#mama","title":"MAMA","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .mama()\n    .interval(Interval.WEEKLY)\n    .seriesType(SeriesType.OPEN)\n    .fastLimit(0.1)\n    .slowLimit(0.5)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>MAMAResponse</code></p>"},{"location":"indicators/#vwap","title":"VWAP","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .vwap()\n    .interval(Interval.WEEKLY)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>SimpleIndicatorResponse</code></p>"},{"location":"indicators/#t3","title":"T3","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .t3()\n    .interval(Interval.WEEKLY)\n    .seriesType(SeriesType.OPEN)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicSeriesResponse</code></p>"},{"location":"indicators/#macd","title":"MACD","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .macd()\n    .interval(Interval.DAILY)\n    .seriesType(SeriesType.OPEN)\n    .fastPeriod(12)\n    .slowPeriod(26)\n    .signalPeriod(9)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>MACDResponse</code></p>"},{"location":"indicators/#macdext","title":"MACDEXT","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .macdext()\n    .interval(Interval.DAILY)\n    .seriesType(SeriesType.OPEN)\n    .fastPeriod(12)\n    .slowPeriod(26)\n    .signalPeriod(9)\n    .slowMaType(MAType.SMA)\n    .fastMaType(MAType.MAMA)\n    .signalMaType(MAType.SMA)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>MACDEXTResponse</code></p>"},{"location":"indicators/#stoch","title":"STOCH","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .stoch()\n    .interval(Interval.SIXTY_MIN)\n    .fastKPeriod(5)\n    .slowKPeriod(3)\n    .slowDPeriod(3)\n    .slowKMaType(MAType.SMA)\n    .slowDMaType(MAType.SMA)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>STOCHResponse</code></p>"},{"location":"indicators/#stochf","title":"STOCHF","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .stochf()\n    .interval(Interval.SIXTY_MIN)\n    .fastKPeriod(5)\n    .fastDPeriod(3)\n    .fastDMaType(MAType.MAMA)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>STOCHFResponse</code></p>"},{"location":"indicators/#rsi","title":"RSI","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .rsi()\n    .interval(Interval.WEEKLY)\n    .seriesType(SeriesType.OPEN)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicSeriesResponse</code></p>"},{"location":"indicators/#stochrsi","title":"STOCHRSI","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .stochrsi()\n    .interval(Interval.SIXTY_MIN)\n    .fastKPeriod(5)\n    .fastDPeriod(3)\n    .fastDMaType(MAType.MAMA)\n    .seriesType(SeriesType.OPEN)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>STOCHRSIResponse</code></p>"},{"location":"indicators/#willr","title":"WILLR","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .willr()\n    .interval(Interval.DAILY)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicResponse</code></p>"},{"location":"indicators/#adx","title":"ADX","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .adx()\n    .interval(Interval.DAILY)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicResponse</code></p>"},{"location":"indicators/#adxr","title":"ADXR","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .adxr()\n    .interval(Interval.DAILY)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicResponse</code></p>"},{"location":"indicators/#ppo","title":"PPO","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .ppo()\n    .interval(Interval.DAILY)\n    .seriesType(SeriesType.OPEN)\n    .maType(MAType.MAMA)\n    .fastPeriod(10)\n    .slowPeriod(26)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PriceOscillatorResponse</code></p>"},{"location":"indicators/#apo","title":"APO","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .apo()\n    .interval(Interval.DAILY)\n    .seriesType(SeriesType.OPEN)\n    .maType(MAType.MAMA)\n    .fastPeriod(10)\n    .slowPeriod(26)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PriceOscillatorResponse</code></p>"},{"location":"indicators/#mom","title":"MOM","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .mom()\n    .interval(Interval.WEEKLY)\n    .seriesType(SeriesType.OPEN)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicSeriesResponse</code></p>"},{"location":"indicators/#bop","title":"BOP","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .bop()\n    .interval(Interval.WEEKLY)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>SimpleIndicatorResponse</code></p>"},{"location":"indicators/#cci","title":"CCI","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .cci()\n    .interval(Interval.DAILY)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicResponse</code></p>"},{"location":"indicators/#cmo","title":"CMO","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .cmo()\n    .interval(Interval.WEEKLY)\n    .seriesType(SeriesType.OPEN)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicSeriesResponse</code></p>"},{"location":"indicators/#roc","title":"ROC","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .roc()\n    .interval(Interval.WEEKLY)\n    .seriesType(SeriesType.OPEN)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicSeriesResponse</code></p>"},{"location":"indicators/#rocr","title":"ROCR","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .rocr()\n    .interval(Interval.WEEKLY)\n    .seriesType(SeriesType.OPEN)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicSeriesResponse</code></p>"},{"location":"indicators/#aroon","title":"AROON","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .aroon()\n    .interval(Interval.WEEKLY)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>AROONResponse</code></p>"},{"location":"indicators/#aroonosc","title":"AROONOSC","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .aroonosc()\n    .interval(Interval.WEEKLY)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicResponse</code></p>"},{"location":"indicators/#mfi","title":"MFI","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .mfi()\n    .interval(Interval.WEEKLY)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicResponse</code></p>"},{"location":"indicators/#trix","title":"TRIX","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .trix()\n    .interval(Interval.WEEKLY)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicResponse</code></p>"},{"location":"indicators/#ultosc","title":"ULTOSC","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .ultosc()\n    .interval(Interval.SIXTY_MIN)\n    .timePeriod1(7)\n    .timePeriod2(14)\n    .timePeriod3(28)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>ULTOSCResponse</code></p>"},{"location":"indicators/#dx","title":"DX","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .dx()\n    .interval(Interval.WEEKLY)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicResponse</code></p>"},{"location":"indicators/#minus_di","title":"MINUS_DI","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .minusdi()\n    .interval(Interval.WEEKLY)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicResponse</code></p>"},{"location":"indicators/#plus_di","title":"PLUS_DI","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .plusdi()\n    .interval(Interval.WEEKLY)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicResponse</code></p>"},{"location":"indicators/#minus_dm","title":"MINUS_DM","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .minusdm()\n    .interval(Interval.WEEKLY)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicResponse</code></p>"},{"location":"indicators/#plus_dm","title":"PLUS_DM","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .plusdm()\n    .interval(Interval.WEEKLY)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicResponse</code></p>"},{"location":"indicators/#bbands","title":"BBANDS","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .bbands()\n    .interval(Interval.DAILY)\n    .timePeriod(60)\n    .seriesType(SeriesType.OPEN)\n    .nbdevdn(4)\n    .nbdevup(4)\n    .maType(MAType.SMA)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>BBANDSResponse</code></p>"},{"location":"indicators/#midpoint","title":"MIDPOINT","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .midpoint()\n    .interval(Interval.WEEKLY)\n    .seriesType(SeriesType.OPEN)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicSeriesResponse</code></p>"},{"location":"indicators/#midprice","title":"MIDPRICE","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .midprice()\n    .interval(Interval.WEEKLY)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicResponse</code></p>"},{"location":"indicators/#sar","title":"SAR","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .sar()\n    .interval(Interval.DAILY)\n    .acceleration(0.02)\n    .maximum(0.50)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>SARResponse</code></p>"},{"location":"indicators/#trange","title":"TRANGE","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .trange()\n    .interval(Interval.WEEKLY)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>SimpleIndicatorResponse</code></p>"},{"location":"indicators/#atr","title":"ATR","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .atr()\n    .interval(Interval.WEEKLY)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicResponse</code></p>"},{"location":"indicators/#natr","title":"NATR","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .natr()\n    .interval(Interval.WEEKLY)\n    .timePeriod(60)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>PeriodicResponse</code></p>"},{"location":"indicators/#ad","title":"AD","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .ad()\n    .interval(Interval.WEEKLY)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>SimpleIndicatorResponse</code></p>"},{"location":"indicators/#adosc","title":"ADOSC","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .adosc()\n    .interval(Interval.WEEKLY)\n    .fastPeriod(3)\n    .slowPeriod(10)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>ADOSCResponse</code></p>"},{"location":"indicators/#obv","title":"OBV","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .obv()\n    .interval(Interval.WEEKLY)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>SimpleIndicatorResponse</code></p>"},{"location":"indicators/#ht_trendline","title":"HT_TRENDLINE","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .httrendline()\n    .interval(Interval.DAILY)\n    .seriesType(SeriesType.OPEN)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>SeriesResponse</code></p>"},{"location":"indicators/#ht_sine","title":"HT_SINE","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .htsine()\n    .interval(Interval.DAILY)\n    .seriesType(SeriesType.OPEN)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>HTSINEResponse</code></p>"},{"location":"indicators/#ht_trendmode","title":"HT_TRENDMODE","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .httrendmode()\n    .interval(Interval.DAILY)\n    .seriesType(SeriesType.OPEN)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>SeriesResponse</code></p>"},{"location":"indicators/#ht_dcperiod","title":"HT_DCPERIOD","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .htdcperiod()\n    .interval(Interval.DAILY)\n    .seriesType(SeriesType.OPEN)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>SeriesResponse</code></p>"},{"location":"indicators/#ht_dcphase","title":"HT_DCPHASE","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .htdcphase()\n    .interval(Interval.DAILY)\n    .seriesType(SeriesType.OPEN)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>SeriesResponse</code></p>"},{"location":"indicators/#ht_phasor","title":"HT_PHASOR","text":"Java <pre><code>AlphaVantage.api()\n    .indicator()\n    .httrendmode()\n    .interval(Interval.DAILY)\n    .seriesType(SeriesType.OPEN)\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>HTPHASORResponse</code></p>"},{"location":"sector/","title":"Sector Performances","text":""},{"location":"sector/#request","title":"Request","text":"Java <pre><code>AlphaVantage.api()\n    .sector()\n    .onSuccess((e) -&gt; onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>SectorResponse</code></p>"},{"location":"sector/#response","title":"Response","text":"Java <pre><code>public void onData(SectorResponse reponse){\n    SectorUnit realtime = response.getRealTimePerformance();\n    String energy = realtime.getEnergy();\n    String financials = realtime.getFinancials();\n    String industrials  = realtime.getIndustrials();\n    String realEstate = realtime.getRealEstate();\n    String informationTechnology = realtime.getInformationTechnology();\n    String materials = realtime.getMaterials();\n    String consumerDiscretionary = realtime.getConsumerDiscretionary();\n    String communicationServices = realtime.getCommunicationServices();\n    String healthCare = realtime.getHealthCare();\n    String consumerStaples = realtime.getConsumerStaples();\n    String utilities = realtime.getUtilities();\n    ...\n}\n</code></pre>"},{"location":"timeseries/","title":"Stock Time Series","text":""},{"location":"timeseries/#time-series","title":"Time Series","text":""},{"location":"timeseries/#defaults","title":"Defaults","text":"<pre><code>interval: Interval.ONE_MIN\nouputSize: OutputSize.COMPACT\ndataType: DataType.JSON\n</code></pre>"},{"location":"timeseries/#intraday","title":"Intraday","text":"Java <pre><code>Alphavantage.api()\n    .timeSeries()\n    .intraday()\n    .forSymbol(\"AAPL\")\n    .interval(Interval.THIRTY_MIN)\n    .outputSize(OutputSize.FULL)\n    .dataType(DataType.JSON)\n    .onSuccess(e-&gt;onData(e.getStockUnits()))\n    .fetch();\n</code></pre> <p>Response Type: <code>TimeSeriesResponse</code></p>"},{"location":"timeseries/#daily","title":"Daily","text":"Java <pre><code>Alphavantage.api()\n    .timeSeries()\n    .daily()\n    .forSymbol(\"AAPL\")\n    .outputSize(OutputSize.FULL)\n    .dataType(DataType.JSON)\n    .onSuccess(e-&gt;onData(e.getStockUnits()))\n    .fetch();\n</code></pre> <p>Response Type: <code>TimeSeriesResponse</code></p>"},{"location":"timeseries/#daily-adjusted","title":"Daily Adjusted","text":"Java <pre><code>Alphavantage.api()\n    .timeSeries()\n    .daily()\n    .adjusted()\n    .forSymbol(\"AAPL\")\n    .outputSize(OutputSize.FULL)\n    .dataType(DataType.JSON)\n    .onSuccess(e-&gt;onData(e.getStockUnits()))\n    .fetch();\n</code></pre> <p>Response Type: <code>TimeSeriesResponse</code></p>"},{"location":"timeseries/#weekly","title":"Weekly","text":"Java <pre><code>Alphavantage.api()\n    .timeSeries()\n    .weekly()\n    .forSymbol(\"AAPL\")\n    .outputSize(OutputSize.FULL)\n    .dataType(DataType.JSON)\n    .onSuccess(e-&gt;onData(e.getStockUnits()))\n    .fetch();\n</code></pre> <p>Response Type: <code>TimeSeriesResponse</code></p>"},{"location":"timeseries/#weekly-adjusted","title":"Weekly Adjusted","text":"Java <pre><code>Alphavantage.api()\n    .timeSeries()\n    .weekly()\n    .adjusted()\n    .forSymbol(\"AAPL\")\n    .outputSize(OutputSize.FULL)\n    .dataType(DataType.JSON)\n    .onSuccess(e-&gt;onData(e.getStockUnits()))\n    .fetch();\n</code></pre> <p>Response Type: <code>TimeSeriesResponse</code></p>"},{"location":"timeseries/#monthly","title":"Monthly","text":"Java <pre><code>Alphavantage.api()\n    .timeSeries()\n    .monthly()\n    .forSymbol(\"AAPL\")\n    .outputSize(OutputSize.FULL)\n    .dataType(DataType.JSON)\n    .onSuccess(e-&gt;onData(e.getStockUnits()))\n    .fetch();\n</code></pre> <p>Response Type: <code>TimeSeriesResponse</code></p>"},{"location":"timeseries/#monthly-adjusted","title":"Monthly Adjusted","text":"Java <pre><code>Alphavantage.api()\n    .timeSeries()\n    .monthly()\n    .adjusted()\n    .forSymbol(\"AAPL\")\n    .outputSize(OutputSize.FULL)\n    .dataType(DataType.JSON)\n    .onSuccess(e-&gt;onData(e.getStockUnits()))\n    .fetch();\n</code></pre> <p>Response Type: <code>TimeSeriesResponse</code></p>"},{"location":"timeseries/#response","title":"Response","text":"Java <pre><code>public void onData(List&lt;StockUnit&gt; stockUnits){\n   stockUnits.stream().forEach(u -&gt; {\n        System.out.println(u.getHigh());\n        System.out.println(u.getLow());\n        System.out.println(u.getOpen());\n        System.out.println(u.getClose());\n        System.out.println(u.getVolume());\n        System.out.println(u.getAdjustedClose());\n        System.out.println(u.getDividendAmount());\n        System.out.println(u.getSplitCoefficient());\n        System.out.println(u.getDate());\n   })\n}\n</code></pre>"},{"location":"timeseries/#quote-endpoint","title":"Quote Endpoint","text":"Java <pre><code>Alphavantage.api()\n    .timeSeries()\n    .quote()\n    .forSymbol(\"AAPL\")\n    .onSuccess(e-&gt;onData(e))\n    .fetch();\n</code></pre> <p>Response Type: <code>QuoteResponse</code></p>"},{"location":"timeseries/#response_1","title":"Response","text":"Java <pre><code>public void onData(QuoteResponse reponse){\n    System.out.println(response.getHigh());\n    System.out.println(response.getLow());\n    System.out.println(response.getOpen());\n    System.out.println(response.getClose());\n    System.out.println(response.getVolume());\n    System.out.println(response.getSymbol());\n    System.out.println(response.getLatestTradingDay());\n    System.out.println(response.getPreviousClose());\n    System.out.println(response.getChange());\n    System.out.println(response.getChangePercent());\n}\n</code></pre>"},{"location":"api/alphavantage/","title":"alphavantage-java","text":"<p>alphavantage</p>"},{"location":"api/alphavantage/#package-alphavantage","title":"Package alphavantage","text":""},{"location":"api/alphavantage/#types","title":"Types","text":"Name Summary Alphavantage Client interface of library. The API is accessed through this class. Exposes a singleton instance for interaction. <code>class Alphavantage</code> AlphavantageException Exception class for the library. <code>class AlphavantageException</code> Config Allows you to set the library configuration parameters. <code>class AlphavantageException</code> Fetcher Defines an interface for pulling data from the API source. A fetch operation can either fail or succeed. <code>interface Fetcher</code> UrlExtractor Extracts a valid url from a request object. The request object should contain valid api endpoint parameters. <code>class UrlExtractor</code>"},{"location":"api/alphavantage/#packages","title":"Packages","text":"Name Summary timeseries <code>package alphavantage.timeseries</code> crypto <code>package alphavantage.crypto</code> forex <code>package alphavantage.forex</code> indicator <code>package alphavantage.indicator</code> exchangerate <code>package alphavantage.exchangerate</code> sector <code>package alphavantage.sector</code> fundamentaldata <code>package alphavantage.fundamentaldata</code>"},{"location":"api/alphavantage/alphavantage/","title":"Alphavantage","text":"<p>alphavantage / Alphavantage</p>"},{"location":"api/alphavantage/alphavantage/#alphavantage","title":"Alphavantage","text":"<p><code>public class  Alphavantage extends Object</code></p> <p>Client interface of library. The API is accessed through this class. Exposes a singleton instance for interaction.</p>"},{"location":"api/alphavantage/alphavantage/#initialization","title":"Initialization","text":"<p>This class should only be initialized once by calling <code>init</code>.You will typically call this in your main application class. You cannot create an instance using <code>new</code>.</p> <pre><code>Alphavantage.api().init(config)\n</code></pre>"},{"location":"api/alphavantage/alphavantage/#constructors","title":"Constructors","text":"Name Summary Alphavantage private default constructor <code>private Alphavantage()</code>"},{"location":"api/alphavantage/alphavantage/#properties","title":"Properties","text":"Name Summary INSTANCE <code>private static Alphavantage INSTANCE</code> config <code>private Config config</code>"},{"location":"api/alphavantage/alphavantage/#methods","title":"Methods","text":"Name Summary api Get a reference to the api. <code>public static Alphavantage api()</code> init Initialize the library with your configuration. <code>public void init(Config config)</code> crypto Access to Digital Currencies. Returns a Crypto Instance for access to Digital Currency data. <code>public Crypto crypto()</code> exchangeRate Access to Exchange Rates Data. <code>public ExchangeRate exhcangeRate()</code> forex Access to Foreign Exchange Data. <code>public Forex forex()</code> indicator Access to Technical Indicators. Returns an Indicator instance for access to Technical Indicator Data <code>public Indicator indicator()</code> timeSeries Access to Stock Time Series Data.<code>public TimeSeries timeSeries()</code> sector Access to Sector Performance Data.<code>public Sector sector()</code> fundamentaldata Access to Fundamental Data.<code>public FundamentalData fundamentalData()</code>"},{"location":"api/alphavantage/config/","title":"Config","text":"<p>alphavantage / Config</p>"},{"location":"api/alphavantage/config/#config","title":"Config","text":"<p><code>public class  Config extends Object</code></p> <p>Defines configuration parameters you can set for the library to use. You can set the <code>httpClient</code> for the library or use the default <code>httpClient</code>.</p> <pre><code>HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();\nloggingInterceptor.level(Level.BASIC);\n\nOkHttpClient client = new OkHttpClient.Builder()\n    .connectTimeout(4, TimeUnit.SECONDS)\n    .callTimeout(4, TimeUnit.SECONDS)\n    .addInterceptor(loggingInterceptor)\n    .addInterceptor(mockInterceptor)\n    .build();\n\nConfig config = Config.builder()\n    .key(\"demo\")\n    .httpClient(client)\n    .build();\n\n//OR: use default http client\n\nConfig config = Config.builder()\n    .key(\"demo\")\n    .build()\n</code></pre>"},{"location":"api/alphavantage/config/#types","title":"Types","text":"Name Summary Builder <code>public static class Builder</code>"},{"location":"api/alphavantage/config/#constructors","title":"Constructors","text":"Name Summary Config private default constructor <code>private Config()</code>"},{"location":"api/alphavantage/config/#properties","title":"Properties","text":"Name Summary key <code>private String key</code> timeOut <code>private int timeOut</code> httpClient <code>private OkHttpClient httpClient</code> BASE_URL <code>public static String BASE_URL</code>"},{"location":"api/alphavantage/config/#methods","title":"Methods","text":"Name Summary builder <code>public static Builder builder()</code> defaultClient <code>private OkHttpClient defaultClient(int timeOut)</code> getTimeOut <code>public int getTimeOut()</code> getOkHttpClient <code>public OkHttpClient getOkHttpClient()</code> getKey <code>public String getKey()</code>"},{"location":"api/alphavantage/exception/","title":"Exception","text":"<p>alphavantage / AlphavantageException</p>"},{"location":"api/alphavantage/exception/#alphavantageexception","title":"AlphavantageException","text":"<p><code>public class  AlphavantageException extends Object, RuntimeException</code></p> <p>Exception class for the library.</p>"},{"location":"api/alphavantage/exception/#constructors","title":"Constructors","text":"Name Summary AlphavantageException <code>public AlphavantageException()</code> AlphavantageException <code>public AlphavantageException(String message)</code>"},{"location":"api/alphavantage/extractor/","title":"Extractor","text":"<p>alphavantage / UrlExtractor</p>"},{"location":"api/alphavantage/extractor/#urlextractor","title":"UrlExtractor","text":"<p><code>public class  UrlExtractor extends Object</code></p> <p>Extracts a valid url from a request object. The request object should contain valid api endpoint parameters</p>"},{"location":"api/alphavantage/extractor/#constructors","title":"Constructors","text":"Name Summary UrlExtractor private default constructor <code>private UrlExtractor()</code>"},{"location":"api/alphavantage/extractor/#methods","title":"Methods","text":"Name Summary extract Get an API url from a request object. <code>public static String extract(Object o)</code>"},{"location":"api/alphavantage/fetcher/","title":"Fetcher","text":"<p>alphavantage / Fetcher</p>"},{"location":"api/alphavantage/fetcher/#fetcher","title":"Fetcher","text":"<p><code>public interface  Fetcher</code></p> <p>Defines an interface for pulling data from the API source. A fetch operation can either fail or succeed.</p>"},{"location":"api/alphavantage/fetcher/#types","title":"Types","text":"Name Summary SuccessCallback Callback when the fetch operation succeeds. <code>&lt;V&gt;</code> the type of the reponse of the fetch operation.<code>interface SuccessCallback&lt;V&gt;</code> FailureCallback Callback when the fetch operation fails. <code>interface FailureCallback</code>"},{"location":"api/alphavantage/fetcher/#methods","title":"Methods","text":"Name Summary fetch Perform a fetch operation. <code>void fetch()</code>"},{"location":"api/crypto/","title":"alphavantage-java","text":"<p>alphavantage / crypto</p>"},{"location":"api/crypto/#package-alphavantagecrypto","title":"Package alphavantage.crypto","text":""},{"location":"api/crypto/#types","title":"Types","text":"Name Summary Crypto Access to Crypto Currency Data. <code>class Crypto</code>"},{"location":"api/crypto/#packages","title":"Packages","text":"Name Summary request <code>package alphavantage.crypto.request</code> response <code>package alphavantage.crypto.response</code>"},{"location":"api/economicindicator/","title":"alphavantage-java","text":"<p>alphavantage / economicindicator</p>"},{"location":"api/economicindicator/#package-alphavantageeconomicindicator","title":"Package alphavantage.economicindicator","text":""},{"location":"api/economicindicator/#types","title":"Types","text":"Name Summary EconomicIndicator Access to Economic Indicator Data. <code>class EconomicIndicator</code>"},{"location":"api/economicindicator/#packages","title":"Packages","text":"Name Summary request <code>package alphavantage.economicindicator.request</code> response <code>package alphavantage.economicindicator.response</code>"},{"location":"api/economicindicator/economicindicator/","title":"Economicindicator","text":"<p>alphavantage / economicindicator / EconomicIndicator</p>"},{"location":"api/economicindicator/economicindicator/#sector","title":"Sector","text":"<p><code>public final class EconomicIndicator extends Object implements</code><code>Fetcher</code></p> <p>Access to Economic Indicator Data</p>"},{"location":"api/economicindicator/economicindicator/#constructors","title":"Constructors","text":"Name Summary EconomicIndicator <code>public EconomicIndicator(Config config)</code>"},{"location":"api/economicindicator/economicindicator/#properties","title":"Properties","text":"Name Summary config <code>private Config config</code> builder <code>private EconomicIndicatorRequest.Builder builder</code> successCallback <code>private Fetcher.SuccessCallback&lt;?&gt; successCallback</code> failureCallback <code>private Fetcher.FailureCallback failureCallback</code>"},{"location":"api/economicindicator/economicindicator/#methods","title":"Methods","text":"Name Summary onSuccess <code>public EconomicIndicator onSuccess(Fetcher.SuccessCallback&lt;?&gt; callback)</code> onFailure <code>public EconomicIndicator onFailure(Fetcher.FailureCallback callback)</code> fetch <code>public void fetch()</code> fetchSync <code>public void fetchSync()</code>"},{"location":"api/economicindicator/request/","title":"alphavantage-java","text":"<p>alphavantage / fundamentaldata / request</p>"},{"location":"api/economicindicator/request/#package-alphavantagefundamentaldatarequest","title":"Package alphavantage.fundamentaldata.request","text":""},{"location":"api/economicindicator/request/#types","title":"Types","text":"Name Summary BalanceSheetRequest <code>public class BalanceSheetRequest</code> CashFlowRequest <code>public class CashFlowRequest</code> CompanyOverviewRequest <code>public class CompanyOverviewRequest</code> EarningsRequest <code>public class EarningsResponseRequest</code> FundamentalDataRequest <code>public abstract class FundamentalDataRequest</code> IncomeStatementRequest <code>public class IncomeStatementRequest</code>"},{"location":"api/economicindicator/response/","title":"alphavantage-java","text":"<p>alphavantage / fundamentaldata / response</p>"},{"location":"api/economicindicator/response/#package-alphavantagefundamentaldataresponse","title":"Package alphavantage.fundamentaldata.response","text":""},{"location":"api/economicindicator/response/#types","title":"Types","text":"Name Summary AnnualEarning <code>class AnnualEarning</code> BalanceSheet <code>class BalanceSheet</code> BalanceSheetResponse <code>class BalanceSheetResponse</code> CashFlow <code>class CashFlow</code> CashFlowResponse <code>class CashFlowResponse</code> CompanyOverview <code>class CompanyOverview</code> CompanyOverviewResponse <code>class CompanyOverviewResponse</code> EarningsResponse <code>class EarningsResponse</code> IncomeStatement <code>class IncomeStatement</code> IncomeStatementResponse <code>class IncomeStatementResponse</code> QuarterlyEarning <code>class QuarterlyEarning</code>"},{"location":"api/exchangerate/","title":"alphavantage-java","text":"<p>alphavantage / exchangerate</p>"},{"location":"api/exchangerate/#package-alphavantageexchangerate","title":"Package alphavantage.exchangerate","text":""},{"location":"api/exchangerate/#types","title":"Types","text":"Name Summary ExchangeRate Access to Exchange Rate Data. <code>class ExchangeRate</code>"},{"location":"api/exchangerate/#packages","title":"Packages","text":"Name Summary request <code>package alphavantage.exchangerate.request</code> response <code>package alphavantage.exchangerate.response</code>"},{"location":"api/forex/","title":"alphavantage-java","text":"<p>alphavantage / forex</p>"},{"location":"api/forex/#package-alphavantageforex","title":"Package alphavantage.forex","text":""},{"location":"api/forex/#types","title":"Types","text":"Name Summary Forex Access to Foreign Exchange Data. <code>class Forex</code>"},{"location":"api/forex/#packages","title":"Packages","text":"Name Summary request <code>package alphavantage.forex.request</code> response <code>package alphavantage.forex.response</code>"},{"location":"api/fundamentaldata/","title":"alphavantage-java","text":"<p>alphavantage / fundamentaldata</p>"},{"location":"api/fundamentaldata/#package-alphavantagefundamentaldata","title":"Package alphavantage.fundamentaldata","text":""},{"location":"api/fundamentaldata/#types","title":"Types","text":"Name Summary FundamentalData Access to Fundamental Data. <code>class FundamentalData</code>"},{"location":"api/fundamentaldata/#packages","title":"Packages","text":"Name Summary request <code>package alphavantage.fundamentaldata.request</code> response <code>package alphavantage.fundamentaldata.response</code>"},{"location":"api/fundamentaldata/fundamentaldata/","title":"Fundamentaldata","text":"<p>alphavantage / fundamentaldata / FundamentalData</p>"},{"location":"api/fundamentaldata/fundamentaldata/#sector","title":"Sector","text":"<p><code>public final class FundamentalData extends Object implements</code><code>Fetcher</code></p> <p>Access to Fundamental Data</p>"},{"location":"api/fundamentaldata/fundamentaldata/#constructors","title":"Constructors","text":"Name Summary FundamentalData <code>public FundamentalData(Config config)</code>"},{"location":"api/fundamentaldata/fundamentaldata/#properties","title":"Properties","text":"Name Summary config <code>private Config config</code> builder <code>private FundamentalDataRequest.Builder builder</code> successCallback <code>private Fetcher.SuccessCallback&lt;?&gt; successCallback</code> failureCallback <code>private Fetcher.FailureCallback failureCallback</code>"},{"location":"api/fundamentaldata/fundamentaldata/#methods","title":"Methods","text":"Name Summary onSuccess <code>public FundamentalData onSuccess(Fetcher.SuccessCallback&lt;?&gt; callback)</code> onFailure <code>public FundamentalData onFailure(Fetcher.FailureCallback callback)</code> fetch <code>public void fetch()</code> fetchSync <code>public void fetchSync()</code>"},{"location":"api/fundamentaldata/request/","title":"alphavantage-java","text":"<p>alphavantage / fundamentaldata / request</p>"},{"location":"api/fundamentaldata/request/#package-alphavantagefundamentaldatarequest","title":"Package alphavantage.fundamentaldata.request","text":""},{"location":"api/fundamentaldata/request/#types","title":"Types","text":"Name Summary BalanceSheetRequest <code>public class BalanceSheetRequest</code> CashFlowRequest <code>public class CashFlowRequest</code> CompanyOverviewRequest <code>public class CompanyOverviewRequest</code> EarningsRequest <code>public class EarningsResponseRequest</code> FundamentalDataRequest <code>public abstract class FundamentalDataRequest</code> IncomeStatementRequest <code>public class IncomeStatementRequest</code>"},{"location":"api/fundamentaldata/response/","title":"alphavantage-java","text":"<p>alphavantage / fundamentaldata / response</p>"},{"location":"api/fundamentaldata/response/#package-alphavantagefundamentaldataresponse","title":"Package alphavantage.fundamentaldata.response","text":""},{"location":"api/fundamentaldata/response/#types","title":"Types","text":"Name Summary AnnualEarning <code>class AnnualEarning</code> BalanceSheet <code>class BalanceSheet</code> BalanceSheetResponse <code>class BalanceSheetResponse</code> CashFlow <code>class CashFlow</code> CashFlowResponse <code>class CashFlowResponse</code> CompanyOverview <code>class CompanyOverview</code> CompanyOverviewResponse <code>class CompanyOverviewResponse</code> EarningsResponse <code>class EarningsResponse</code> IncomeStatement <code>class IncomeStatement</code> IncomeStatementResponse <code>class IncomeStatementResponse</code> QuarterlyEarning <code>class QuarterlyEarning</code>"},{"location":"api/indicator/","title":"alphavantage-java","text":"<p>alphavantage / indicator</p>"},{"location":"api/indicator/#package-alphavantageindicator","title":"Package alphavantage.indicator","text":""},{"location":"api/indicator/#types","title":"Types","text":"Name Summary Indicator Access to Technical Indicator Data. <code>class Indicator</code>"},{"location":"api/indicator/#packages","title":"Packages","text":"Name Summary request <code>package alphavantage.indicator.request</code> response <code>package alphavantage.indicator.response</code>"},{"location":"api/sector/","title":"alphavantage-java","text":"<p>alphavantage / sector</p>"},{"location":"api/sector/#package-alphavantagesector","title":"Package alphavantage.sector","text":""},{"location":"api/sector/#types","title":"Types","text":"Name Summary Sector Access to Sector Performance Data. <code>class Sector</code>"},{"location":"api/sector/#packages","title":"Packages","text":"Name Summary request <code>package alphavantage.sector.request</code> response <code>package alphavantage.sector.response</code>"},{"location":"api/sector/request/","title":"alphavantage-java","text":"<p>alphavantage / sector / request</p>"},{"location":"api/sector/request/#package-alphavantagesectorrequest","title":"Package alphavantage.sector.request","text":""},{"location":"api/sector/request/#types","title":"Types","text":"Name Summary SectorRequest A sector performance request. <code>class SectorRequest</code>"},{"location":"api/sector/response/","title":"alphavantage-java","text":"<p>alphavantage / sector / response</p>"},{"location":"api/sector/response/#package-alphavantagesectorresponse","title":"Package alphavantage.sector.response","text":""},{"location":"api/sector/response/#types","title":"Types","text":"Name Summary SectorResponse A Sector performance response. <code>class SectorResponse</code> SectorUnit A sector performance data structure. <code>class SectorUnit</code>"},{"location":"api/sector/sector-request/","title":"Sector request","text":"<p>alphavantage / sector / request / SectorRequest</p>"},{"location":"api/sector/sector-request/#sectorrequest","title":"SectorRequest","text":"<p><code>public final class SectorRequest extends Object</code></p> <p>A Sector request</p>"},{"location":"api/sector/sector-request/#types","title":"Types","text":"Name Summary Builder <code>public static class Builder</code>"},{"location":"api/sector/sector-request/#constructors","title":"Constructors","text":"Name Summary SectorRequest <code>private SectorRequest(SectorRequest.Builder builder)</code>"},{"location":"api/sector/sector-request/#properties","title":"Properties","text":"Name Summary function <code>private Function function</code>"},{"location":"api/sector/sector-response/","title":"Sector response","text":"<p>alphavantage / sector / response / SectorResponse</p>"},{"location":"api/sector/sector-response/#sectorresponse","title":"SectorResponse","text":"<p><code>public final class SectorResponse extends Object</code></p> <p>A Sector response</p>"},{"location":"api/sector/sector-response/#types","title":"Types","text":"Name Summary MetaData <code>public static class MetaData</code> SectorParser <code>public static class SectorParser</code>"},{"location":"api/sector/sector-response/#constructors","title":"Constructors","text":"Name Summary SectorResponse <code>private SectorResponse(String errorMessage)</code> SectorResponse <code>private SectorResponse(MetaData metaData, Map&lt;String, SectorUnit&gt; sectorUnits)</code>"},{"location":"api/sector/sector-response/#properties","title":"Properties","text":"Name Summary metaData <code>private MetaData metaData</code> sectorUnits <code>private Map&lt;String, SectorUnits&gt; sectorUnits</code> errorMessage <code>private String errorMessage</code>"},{"location":"api/sector/sector-response/#methods","title":"Methods","text":"Name Summary getMetaData <code>public MetaData getMetaData()</code> getErrorMessage <code>public String getErrorMessage()</code> getRealTimePerformance <code>public SectorUnit getRealTimePerformance()</code> getOneDayPerformance <code>public SectorUnit getOneDayPerformance()</code> getFiveDayPerformance <code>public SectorUnit getFiveDayPerformance()</code> getOneMonthPerformance <code>public SectorUnit getOneMonthPerformance()</code> getThreeMonthPerformance <code>public SectorUnit getThreeMonthPerformance()</code> getYearToDatePerformance <code>public SectorUnit getYearToDatePerformance()</code> getOneYearPerformance <code>public SectorUnit getOneYearPerformance()</code> getThreeYearPerformance <code>public SectorUnit getThreeYearPerformance()</code> getFiveYearPerformance <code>public SectorUnit getFiveYearPerformance()</code> getTenYearPerformance <code>public SectorUnit getTenYearPerformance()</code> toString <code>public String toString()</code>"},{"location":"api/sector/sector-unit/","title":"Sector unit","text":"<p>alphavantage / sector / response / SectorUnit</p>"},{"location":"api/sector/sector-unit/#sectorunit","title":"SectorUnit","text":"<p><code>public final class SectorUnit extends Object</code></p> <p>A sector performance data structure</p>"},{"location":"api/sector/sector-unit/#constructors","title":"Constructors","text":"Name Summary SectorUnit <code>public SectorUnit(String informationTechnology ,String consumerDiscretionary, String healthCare, String communicationServices,String realEstate,String utilities,String financials,String materials,String industrials,String consumerStaples,String energy)</code>"},{"location":"api/sector/sector-unit/#properties","title":"Properties","text":"Name Summary informationTechnology <code>private String informationTechnology</code> consumerDiscretionary <code>private String consumerDiscretionary</code> healthCare <code>private String healthCare</code> communicationServices <code>private String communicationServices</code> realEstate <code>private String realEstate</code> utilities <code>private String utilities</code> financials <code>private String financials</code> materials <code>private String materials</code> industrials <code>private String industrials</code> consumerStaples <code>private String consumerStaples</code> energy <code>private String energy</code>"},{"location":"api/sector/sector-unit/#methods","title":"Methods","text":"Name Summary getInformationTechnology <code>private String getInformationTechnology()</code> getConsumerDiscretionary <code>private String getConsumerDiscretionary()</code> getHealthCare <code>private String getHealthCare()</code> getCommunicationServices <code>private String getCommunicationServices()</code> getRealEstate <code>private String getRealEstate()</code> getUtilities <code>private String getUtilities()</code> getFinancials <code>private String getFinancials()</code> getMaterials <code>private String getMaterials()</code> getIndustrials <code>private String getIndustrials()</code> getConsumerStaples <code>private String getConsumerStaples()</code> getEnergy <code>private String getEnergy()</code>"},{"location":"api/sector/sector/","title":"Sector","text":"<p>alphavantage / sector / Sector</p>"},{"location":"api/sector/sector/#sector","title":"Sector","text":"<p><code>public final class Sector extends Object implements</code><code>Fetcher</code></p> <p>Access to Sector Performance Data</p>"},{"location":"api/sector/sector/#constructors","title":"Constructors","text":"Name Summary Sector <code>public Sector(Config config)</code>"},{"location":"api/sector/sector/#properties","title":"Properties","text":"Name Summary config <code>private Config config</code> builder <code>private SectorRequest.Builder builder</code> successCallback <code>private Fetcher.SuccessCallback&lt;SectorResponse&gt; successCallback</code> failureCallback <code>private Fetcher.FailureCallback failureCallback</code>"},{"location":"api/sector/sector/#methods","title":"Methods","text":"Name Summary onSuccess <code>public Sector onSuccess(Fetcher.SuccessCallback&lt;SectorResponse&gt; callback)</code> onFailure <code>public Sector onFailure(Fetcher.FailureCallback callback)</code> fetch <code>public void fetch()</code>"},{"location":"api/timeseries/","title":"alphavantage-java","text":"<p>alphavantage / timeseries</p>"},{"location":"api/timeseries/#package-alphavantagetimeseries","title":"Package alphavantage.timeseries","text":""},{"location":"api/timeseries/#types","title":"Types","text":"Name Summary TimeSeries Access to Stock Time Series Data. <code>class TimeSeries</code>"},{"location":"api/timeseries/#packages","title":"Packages","text":"Name Summary request <code>package alphavantage.timeseries.request</code> response <code>package alphavantage.timeseries.response</code>"}]}